#!/bin/bash
CONFIG_DIR=./config/

red=`tput setaf 1`
green=`tput setaf 2`
cyan=`tput setaf 6`
reset=`tput sgr0`
indent() {
    echo -en "    "
}
print() {
    echo $@$reset
}
step() {
    print "$green$@"
}
info() {
    print "$cyan$@"
}
error() {
    print "$red$@"
}
get_confirmation() {
    print -n $cyan"Do you want to continue?$reset [y/N] "
    read CONFIRM

    if [ "$CONFIRM" == "y" ]
    then
        return 1
    fi
    return 0
}

_run_hooks() {
    for hook in hooks/*
    do
        indent
        info "Executing:$reset $hook"
        source $hook
        if [ "$?" != "0" ]
        then
            print "Aborting script execution (one of the hooks failed)."
            exit 1
        fi
    done
}

_display_summary() {
    step "Summary"
    indent && info "Label:$reset $BOOT_ENTRY_LABEL"
    indent && info "Kernel:$reset $KERNEL_PATH"
    indent && info "Final cmdline:$reset $KERNEL_PARAMETERS"
}

_create() {
    step "Loading the configuration file"
    source $CONFIG_DIR/efi-entry

    step "Running hooks"
    _run_hooks

    _display_summary
    indent && get_confirmation "Do you want to add this entry?"
    if [ $? == 0 ]
    then
        error "Canceled by the user."
        return 0
    fi

    info "Adding the entry using efibootmgr"
    EFIBOOTMGR="efibootmgr"
    if [ "`whoami`" != "root" ]
    then
        EFIBOOTMGR="sudo efibootmgr"
    fi
    $EFIBOOTMGR \
	    --disk $ESP_DISK --part $ESP_PARTITION_ID \
	    --create \
	        --label "$BOOT_ENTRY_LABEL" \
	        --loader $KERNEL_PATH \
	        --unicode "$KERNEL_PARAMETERS" \
	    --verbose
}

_simulate() {
    step "Loading the configuration file"
    source $CONFIG_DIR/efi-entry

    step "Running hooks"
    _run_hooks

    _display_summary
}

_help() {
    indent && step "help:$reset self-explanatory"
    indent && step "create:$reset creates an EFI entry"
    indent && step "simulate:$reset generates a list of kernel parameters without modifying NVRAM"
}

info "update-efi-entry"
case "$1" in
    "help")
        _help
        ;;
    "create")
        _create
        ;;
    "simulate")
        _simulate
        ;;
    "")
        _help
        ;;
    *)
        error "Unrecognized action: $1"
        _help
        ;; 
esac